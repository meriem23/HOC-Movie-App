{"version":3,"sources":["Component/AddMovies.js","Component/RatingMovies.js","Component/MoviesCard.js","Component/SpinnerComp.js","Component/ListMovies.js","Component/HocLoading.js","Component/SearchMovies.js","App.js","serviceWorker.js","index.js"],"names":["AddMovies","props","handleShow","setState","show","state","handleChange","e","target","name","value","addNewMovie","addMovie","id","uuidv4","title","imgURL","ratings","year","class","onClick","this","Modal","onHide","Header","closeButton","Title","Body","type","onChange","Footer","Button","variant","Component","RatingMovies","starRate","i","rate","push","className","r","getkeyrate","MoviesCard","src","movie","delete","SpinnerComp","Spinner","animation","role","HocLoading","isLoading","movies","map","el","key","SearchMovies","maxLength","placeholder","getkeyword","App","keyword","keyrate","search","y","rating","add","m","concat","filter","setTimeout","toUpperCase","indexOf","trim","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47e7834b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport {v4 as uuidv4} from \"uuid\"\r\n\r\nclass AddMovies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      title: \"\",\r\n      imgURL: \"\",\r\n      ratings: \"\",\r\n      year: \"\",\r\n    };\r\n  }\r\n  handleShow = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewMovie = () =>{\r\n    this.props.addMovie({...this.state, id: uuidv4()})\r\n    this.setState({show:false})\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i class=\"far fa-plus-square fa-3x plusSquare\" onClick={this.handleShow}></i>\r\n        <Modal show={this.state.show} onHide={this.handleShow}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add a new Movie</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              <div>\r\n                <label>Title:</label>\r\n                <input type=\"text\" name=\"title\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.value} />\r\n              </div>\r\n              <div>\r\n                <label>Image:</label>\r\n                <input type=\"text\" name=\"imgURL\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.value} />\r\n              </div>\r\n              <div>\r\n                <label>Rating:</label>\r\n                <input type=\"text\" name=\"ratings\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.value} />\r\n              </div>\r\n              <div>\r\n                <label>Year:</label>\r\n                <input type=\"text\" name=\"year\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.value} />\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button variant=\"dark\" onClick={this.handleShow}>Close</Button> */}\r\n            <Button variant=\"light\" onClick={this.addNewMovie}>Add Movie</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMovies;","import React, { Component } from 'react'\r\n\r\n\r\nclass RatingMovies extends Component {\r\n  render() {\r\n    let starRate = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      if (this.props.rate > i) {\r\n        starRate.push(\r\n          <li><i className=\"fas fa-star fa-2x\" onClick={(r) => this.props.getkeyrate(i + 1)}></i>\r\n          </li>\r\n        );\r\n      } else {\r\n        starRate.push(\r\n          <li><i className=\"far fa-star fa-2x\" onClick={(r) => this.props.getkeyrate(i + 1)}></i>\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"starList\">\r\n        {starRate}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RatingMovies;","import React, { Component } from 'react'\r\nimport RatingMovies from './RatingMovies'\r\n\r\nconst MoviesCard = props => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={props.movie.imgURL} className=\"movieImg\" />\r\n      <div className=\"hoverInfo\">\r\n        <div className=\"movieTandY\">\r\n        <i onClick={() => props.delete(props.movie.id)} className=\"far fa-trash-alt fa-2x TrashBtn\"></i>\r\n          <p className=\"movieTitle\">{props.movie.title}</p>\r\n          <h5 className=\"movieYear\">{props.movie.year}</h5>\r\n          <ul className=\"movieRating\"><RatingMovies rate={props.movie.ratings} getkeyrate={() => { }} /></ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesCard;","import React, { Component } from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nclass SpinnerComp extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpinnerComp;","import React, { Component } from 'react'\r\nimport MoviesCard from './MoviesCard'\r\nimport HocLoading from './HocLoading'\r\n\r\n\r\nconst ListMovies = props => {\r\n        return (\r\n            <div className=\"listMovie\">\r\n                {props.movies.map(el => \r\n                (<MoviesCard delete={id => props.delete(id)} movie={el} key={el.id}/>))}\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default HocLoading(ListMovies);","import React, { Component } from 'react'\r\nimport SpinnerComp from './SpinnerComp'\r\n\r\nconst HocLoading = Component => {\r\n    return props =>  props.isLoading ? <SpinnerComp /> : <Component{... props}/>\r\n}\r\nexport default HocLoading;","import React, { Component } from 'react'\r\nimport RatingMovies from './RatingMovies'\r\n\r\n\r\nclass SearchMovies extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     count: 3\r\n  //   };\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className=\"searching\" >\r\n        <input type=\"search\" className=\"searchTerm\" maxLength=\"50\"\r\n          name=\"input\" placeholder=\"Search for a Movie\" onChange={(e) => this.props.getkeyword(e.target.value)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchMovies","import React, { Component } from 'react'\nimport AddMovies from './Component/AddMovies'\nimport ListMovies from './Component/ListMovies'\nimport RatingMovies from './Component/RatingMovies'\nimport SearchMovies from './Component/SearchMovies'\nimport SpinnerComp from './Component/SpinnerComp'\nimport { v4 as uuidv4 } from 'uuid'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\n\nclass App extends Component {\n  state = {\n    movies: [\n      { id: uuidv4(), title: 'Avengers:Endgame', imgURL: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/5ed5a1f0-a8ce-4b86-8f52-89607c9827f1/dd76mdz-69d22a8f-d511-4724-9ef4-f7a8adcc97b1.png/v1/fill/w_1280,h_1811,q_80,strp/avengers__endgame___minimalist_poster___stones_by_yagneshlp_dd76mdz-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9MTgxMSIsInBhdGgiOiJcL2ZcLzVlZDVhMWYwLWE4Y2UtNGI4Ni04ZjUyLTg5NjA3Yzk4MjdmMVwvZGQ3Nm1kei02OWQyMmE4Zi1kNTExLTQ3MjQtOWVmNC1mN2E4YWRjYzk3YjEucG5nIiwid2lkdGgiOiI8PTEyODAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.igN7OLU5tRMPP8nnvJw_kpI-SiXYoN70IozoKzBrB5I', ratings: 5, year: '2019' },\n      { id: uuidv4(), title: 'Inception', imgURL: 'https://i.pinimg.com/originals/b3/12/09/b31209cd43ba1bde909ebdd01112caf8.jpg', ratings: 5, year: '2010' },\n      { id: uuidv4(), title: 'Men in Black', imgURL: 'https://i.pinimg.com/originals/31/c0/d7/31c0d78c922a702a0fa81c772f9684e2.jpg', ratings: 4, year: '1997' },\n      { id: uuidv4(), title: 'Eternal sunshine of the spotless mind', imgURL: 'https://i.pinimg.com/originals/61/b0/8f/61b08f31668c8984277d43b0b68a166f.jpg', ratings: 4, year: '2004' }],\n    keyword: \"\",\n    keyrate: 1,\n    id: \"\",\n    isLoading: true\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ isLoading: false })\n    }, 5000)\n  }\n  search = (y) => {\n    this.setState({\n      keyword: y\n    });\n  };\n  rating = (r) => {\n    this.setState({\n      keyrate: r\n    });\n  };\n  add = (m) => {\n    this.setState({\n      movies: this.state.movies.concat(m)\n    });\n  };\n  delete = (id) => {\n    this.setState({ movies: this.state.movies.filter(el => el.id !== id) })\n  }\n  render() {\n    return (\n      <div className='App'>\n        <div className=\"searchAndrate\">\n          <SearchMovies getkeyword={(y) => this.search(y)} />\n          <h6 className=\"searchRating\">Minimum Rating</h6>\n          <ul><RatingMovies getkeyrate={(r) => this.rating(r)}\n            rate={this.state.keyrate} /></ul>\n        </div>\n        <ListMovies isLoading={this.state.isLoading}\n        delete={id => this.delete(id)} movies={this.state.movies.filter(\n          el => (el.title.toUpperCase().indexOf(this.state.keyword.toUpperCase().trim()) >= \"\") && (el.ratings >= this.state.keyrate))} />\n        <AddMovies addMovie={(m) => this.add(m)} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}